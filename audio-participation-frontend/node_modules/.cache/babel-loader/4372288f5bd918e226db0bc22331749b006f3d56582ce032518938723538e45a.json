{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\awanchiri\\\\audio participation\\\\audio-participation-frontend\\\\src\\\\components\\\\OpinionSubmission.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OpinionSubmission() {\n  _s();\n  const [plans, setPlans] = useState([]);\n  const [selectedPlan, setSelectedPlan] = useState('');\n  const [voiceNote, setVoiceNote] = useState(null);\n  useEffect(() => {\n    fetchPlans();\n  }, []);\n  const fetchPlans = async () => {\n    try {\n      const response = await api.get('/plans/');\n      setPlans(response.data);\n    } catch (error) {\n      console.error('Error fetching plans', error);\n    }\n  };\n  const handleVoiceNoteChange = e => {\n    setVoiceNote(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedPlan || !voiceNote) {\n      alert('Please select a plan and record a voice note.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('plan', selectedPlan);\n    formData.append('voice_note', voiceNote);\n    try {\n      const response = await api.post('/opinions/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 201) {\n        alert('Opinion submitted successfully!');\n        setSelectedPlan('');\n        setVoiceNote(null);\n      } else {\n        alert('Failed to submit opinion.');\n      }\n    } catch (error) {\n      console.error('Error submitting opinion', error);\n      alert('Error submitting opinion.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit Your Opinion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Plan:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedPlan,\n          onChange: e => setSelectedPlan(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), plans.map(plan => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: plan.id,\n            children: plan.title\n          }, plan.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Record Voice Note:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: handleVoiceNoteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Opinion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(OpinionSubmission, \"Rn0dTYR3yGKuT1s/SsUJhikTvD8=\");\n_c = OpinionSubmission;\nexport default OpinionSubmission;\nvar _c;\n$RefreshReg$(_c, \"OpinionSubmission\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","OpinionSubmission","_s","plans","setPlans","selectedPlan","setSelectedPlan","voiceNote","setVoiceNote","fetchPlans","response","get","data","error","console","handleVoiceNoteChange","e","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","post","headers","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","map","plan","id","title","type","accept","_c","$RefreshReg$"],"sources":["C:/Users/awanchiri/audio participation/audio-participation-frontend/src/components/OpinionSubmission.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nfunction OpinionSubmission() {\r\n    const [plans, setPlans] = useState([]);\r\n    const [selectedPlan, setSelectedPlan] = useState('');\r\n    const [voiceNote, setVoiceNote] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchPlans();\r\n    }, []);\r\n\r\n    const fetchPlans = async () => {\r\n        try {\r\n            const response = await api.get('/plans/');\r\n            setPlans(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching plans', error);\r\n        }\r\n    };\r\n\r\n    const handleVoiceNoteChange = (e) => {\r\n        setVoiceNote(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!selectedPlan || !voiceNote) {\r\n            alert('Please select a plan and record a voice note.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('plan', selectedPlan);\r\n        formData.append('voice_note', voiceNote);\r\n\r\n        try {\r\n            const response = await api.post('/opinions/', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            if (response.status === 201) {\r\n                alert('Opinion submitted successfully!');\r\n                setSelectedPlan('');\r\n                setVoiceNote(null);\r\n            } else {\r\n                alert('Failed to submit opinion.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting opinion', error);\r\n            alert('Error submitting opinion.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Submit Your Opinion</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Select Plan:\r\n                    <select value={selectedPlan} onChange={(e) => setSelectedPlan(e.target.value)}>\r\n                        <option value=\"\">Select a plan</option>\r\n                        {plans.map(plan => (\r\n                            <option key={plan.id} value={plan.id}>{plan.title}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Record Voice Note:\r\n                    <input type=\"file\" accept=\"audio/*\" onChange={handleVoiceNoteChange} />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">Submit Opinion</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OpinionSubmission;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}