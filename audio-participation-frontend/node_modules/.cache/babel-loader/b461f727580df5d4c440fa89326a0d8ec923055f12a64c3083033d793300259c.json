{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\awanchiri\\\\audio participation\\\\audio-participation-frontend\\\\src\\\\components\\\\AddOpinion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { FaMicrophone, FaStop } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n    background-color: #f0f2f5;\n    min-height: 100vh;\n`;\n_c = Container;\nconst Title = styled.h2`\n    font-size: 24px;\n    color: #333;\n    margin-bottom: 20px;\n`;\n_c2 = Title;\nconst Button = styled.button`\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 4px;\n    background-color: #007bff;\n    color: white;\n    font-size: 16px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    margin-top: 10px;\n    &:hover {\n        background-color: #0056b3;\n    }\n`;\n_c3 = Button;\nconst AudioPreview = styled.div`\n    margin-top: 20px;\n`;\n_c4 = AudioPreview;\nfunction AddOpinion() {\n  _s();\n  const {\n    planId\n  } = useParams();\n  const [recording, setRecording] = useState(false);\n  const [audioUrl, setAudioUrl] = useState('');\n  const [audioBlob, setAudioBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioRef = useRef(null);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    mediaRecorderRef.current.ondataavailable = event => {\n      const audioChunks = [event.data];\n      const blob = new Blob(audioChunks, {\n        type: 'audio/wav'\n      });\n      const url = URL.createObjectURL(blob);\n      setAudioBlob(blob);\n      setAudioUrl(url);\n    };\n    mediaRecorderRef.current.start();\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('voice_note', audioBlob);\n    formData.append('plan', planId);\n    try {\n      await axios.post('http://localhost:8000/api/opinions/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setAudioUrl('');\n      setAudioBlob(null);\n    } catch (error) {\n      console.error('Error uploading voice note', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"Add Your Opinion for Plan \", planId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpload,\n      children: \"Upload Voice Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !recording ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: startRecording,\n        children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), \" Start Recording\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: stopRecording,\n        children: [/*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), \" Stop Recording\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(AudioPreview, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioUrl,\n        ref: audioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(AddOpinion, \"8nHFyUGu/4FDhI6jfUEmz1RfFvA=\", false, function () {\n  return [useParams];\n});\n_c5 = AddOpinion;\nexport default AddOpinion;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"AudioPreview\");\n$RefreshReg$(_c5, \"AddOpinion\");","map":{"version":3,"names":["React","useState","useRef","styled","axios","useParams","FaMicrophone","FaStop","jsxDEV","_jsxDEV","Container","div","_c","Title","h2","_c2","Button","button","_c3","AudioPreview","_c4","AddOpinion","_s","planId","recording","setRecording","audioUrl","setAudioUrl","audioBlob","setAudioBlob","mediaRecorderRef","audioRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","audioChunks","data","blob","Blob","type","url","URL","createObjectURL","start","stopRecording","stop","handleUpload","formData","FormData","append","post","headers","Authorization","localStorage","getItem","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","controls","src","ref","_c5","$RefreshReg$"],"sources":["C:/Users/awanchiri/audio participation/audio-participation-frontend/src/components/AddOpinion.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom'; \r\nimport { FaMicrophone, FaStop } from 'react-icons/fa';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    background-color: #f0f2f5;\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n    margin-top: 10px;\r\n    &:hover {\r\n        background-color: #0056b3;\r\n    }\r\n`;\r\n\r\nconst AudioPreview = styled.div`\r\n    margin-top: 20px;\r\n`;\r\n\r\nfunction AddOpinion() {\r\n    const { planId } = useParams();\r\n    const [recording, setRecording] = useState(false);\r\n    const [audioUrl, setAudioUrl] = useState('');\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const mediaRecorderRef = useRef(null);\r\n    const audioRef = useRef(null);\r\n\r\n    const startRecording = async () => {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        mediaRecorderRef.current = new MediaRecorder(stream);\r\n        mediaRecorderRef.current.ondataavailable = event => {\r\n            const audioChunks = [event.data];\r\n            const blob = new Blob(audioChunks, { type: 'audio/wav' });\r\n            const url = URL.createObjectURL(blob);\r\n            setAudioBlob(blob);\r\n            setAudioUrl(url);\r\n        };\r\n        mediaRecorderRef.current.start();\r\n        setRecording(true);\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        mediaRecorderRef.current.stop();\r\n        setRecording(false);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        formData.append('voice_note', audioBlob);\r\n        formData.append('plan', planId);\r\n\r\n        try {\r\n            await axios.post('http://localhost:8000/api/opinions/', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            setAudioUrl('');\r\n            setAudioBlob(null);\r\n        } catch (error) {\r\n            console.error('Error uploading voice note', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Title>Add Your Opinion for Plan {planId}</Title>\r\n            <Button onClick={handleUpload}>Upload Voice Note</Button>\r\n            <div>\r\n                {!recording ? (\r\n                    <Button type=\"button\" onClick={startRecording}>\r\n                        <FaMicrophone /> Start Recording\r\n                    </Button>\r\n                ) : (\r\n                    <Button type=\"button\" onClick={stopRecording}>\r\n                        <FaStop /> Stop Recording\r\n                    </Button>\r\n                )}\r\n            </div>\r\n            {audioUrl && (\r\n                <AudioPreview>\r\n                    <h3>Preview:</h3>\r\n                    <audio controls src={audioUrl} ref={audioRef} />\r\n                </AudioPreview>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AddOpinion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}