{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\awanchiri\\\\audio participation\\\\audio-participation-frontend\\\\src\\\\components\\\\Opinions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Opinions({\n  planId\n}) {\n  _s();\n  const [opinions, setOpinions] = useState([]);\n  const [voiceNote, setVoiceNote] = useState(null);\n  const fetchOpinions = async () => {\n    try {\n      const response = await axios.get(`/api/opinions/?plan=${planId}`);\n      setOpinions(response.data);\n    } catch (error) {\n      console.error('Error fetching opinions', error);\n    }\n  };\n  const handleFileChange = e => {\n    setVoiceNote(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('voice_note', voiceNote);\n    formData.append('plan', planId);\n    formData.append('citizen', 1); // Replace with actual citizen ID\n\n    try {\n      await axios.post('/api/opinions/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }\n      });\n      fetchOpinions();\n    } catch (error) {\n      console.error('Error uploading voice note', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Opinions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Voice Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: opinions.map(opinion => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: opinion.transcribed_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: opinion.voice_note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, opinion.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Opinions, \"Y77cr5ehni1TWJ00y+V271BiTxE=\");\n_c = Opinions;\nexport default Opinions;\nvar _c;\n$RefreshReg$(_c, \"Opinions\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Opinions","planId","_s","opinions","setOpinions","voiceNote","setVoiceNote","fetchOpinions","response","get","data","error","console","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","Authorization","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","opinion","transcribed_text","controls","src","voice_note","id","_c","$RefreshReg$"],"sources":["C:/Users/awanchiri/audio participation/audio-participation-frontend/src/components/Opinions.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Opinions({ planId }) {\r\n    const [opinions, setOpinions] = useState([]);\r\n    const [voiceNote, setVoiceNote] = useState(null);\r\n\r\n    const fetchOpinions = async () => {\r\n        try {\r\n            const response = await axios.get(`/api/opinions/?plan=${planId}`);\r\n            setOpinions(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching opinions', error);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setVoiceNote(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        formData.append('voice_note', voiceNote);\r\n        formData.append('plan', planId);\r\n        formData.append('citizen', 1); // Replace with actual citizen ID\r\n\r\n        try {\r\n            await axios.post('/api/opinions/', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Token ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            fetchOpinions();\r\n        } catch (error) {\r\n            console.error('Error uploading voice note', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Opinions</h2>\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload Voice Note</button>\r\n            <ul>\r\n                {opinions.map(opinion => (\r\n                    <li key={opinion.id}>\r\n                        <p>{opinion.transcribed_text}</p>\r\n                        <audio controls src={opinion.voice_note} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Opinions;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,uBAAuBR,MAAM,EAAE,CAAC;MACjEG,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAIC,CAAC,IAAK;IAC5BR,YAAY,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEf,SAAS,CAAC;IACxCa,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEnB,MAAM,CAAC;IAC/BiB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE/B,IAAI;MACA,MAAMvB,KAAK,CAACwB,IAAI,CAAC,gBAAgB,EAAEH,QAAQ,EAAE;QACzCI,OAAO,EAAE;UACL,cAAc,EAAE,qBAAqB;UACrCC,aAAa,EAAE,SAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACzD;MACJ,CAAC,CAAC;MACFlB,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEnB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD/B,OAAA;MAAQkC,OAAO,EAAEhB,YAAa;MAAAS,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzD/B,OAAA;MAAA2B,QAAA,EACKvB,QAAQ,CAAC+B,GAAG,CAACC,OAAO,iBACjBpC,OAAA;QAAA2B,QAAA,gBACI3B,OAAA;UAAA2B,QAAA,EAAIS,OAAO,CAACC;QAAgB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC/B,OAAA;UAAOsC,QAAQ;UAACC,GAAG,EAAEH,OAAO,CAACI;QAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAFtCK,OAAO,CAACK,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAC5B,EAAA,CAnDQF,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}