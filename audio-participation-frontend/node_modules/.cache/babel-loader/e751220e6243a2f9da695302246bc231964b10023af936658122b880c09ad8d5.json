{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\awanchiri\\\\audio participation\\\\audio-participation-frontend\\\\src\\\\components\\\\PlanManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlanManagement() {\n  _s();\n  const [plans, setPlans] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [editingPlan, setEditingPlan] = useState(null);\n  useEffect(() => {\n    fetchPlans();\n  }, []);\n  const fetchPlans = async () => {\n    try {\n      const response = await api.get('/plans/');\n      setPlans(response.data);\n    } catch (error) {\n      console.error('Error fetching plans', error);\n    }\n  };\n  const handleCreateOrUpdatePlan = async () => {\n    try {\n      if (editingPlan) {\n        await api.put(`/plans/${editingPlan.id}/`, {\n          title,\n          description\n        });\n        setPlans(plans.map(plan => plan.id === editingPlan.id ? {\n          ...plan,\n          title,\n          description\n        } : plan));\n      } else {\n        const response = await api.post('/plans/', {\n          title,\n          description\n        });\n        setPlans([...plans, response.data]);\n      }\n      setTitle('');\n      setDescription('');\n      setEditingPlan(null);\n    } catch (error) {\n      console.error(`Error ${editingPlan ? 'updating' : 'creating'} plan`, error);\n    }\n  };\n  const handleEditPlan = plan => {\n    setTitle(plan.title);\n    setDescription(plan.description);\n    setEditingPlan(plan);\n  };\n  const handleDeletePlan = async id => {\n    try {\n      await api.delete(`/plans/${id}/`);\n      setPlans(plans.filter(plan => plan.id !== id));\n    } catch (error) {\n      console.error('Error deleting plan', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Plans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateOrUpdatePlan,\n        children: editingPlan ? 'Update Plan' : 'Create Plan'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: plans.map(plan => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: plan.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: plan.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditPlan(plan),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePlan(plan.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, plan.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(PlanManagement, \"mVIWkcb79Dwa6Fgkk0fGIPsNthg=\");\n_c = PlanManagement;\nexport default PlanManagement;\nvar _c;\n$RefreshReg$(_c, \"PlanManagement\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","PlanManagement","_s","plans","setPlans","title","setTitle","description","setDescription","editingPlan","setEditingPlan","fetchPlans","response","get","data","error","console","handleCreateOrUpdatePlan","put","id","map","plan","post","handleEditPlan","handleDeletePlan","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/awanchiri/audio participation/audio-participation-frontend/src/components/PlanManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nfunction PlanManagement() {\r\n    const [plans, setPlans] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [editingPlan, setEditingPlan] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchPlans();\r\n    }, []);\r\n\r\n    const fetchPlans = async () => {\r\n        try {\r\n            const response = await api.get('/plans/');\r\n            setPlans(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching plans', error);\r\n        }\r\n    };\r\n\r\n    const handleCreateOrUpdatePlan = async () => {\r\n        try {\r\n            if (editingPlan) {\r\n                await api.put(`/plans/${editingPlan.id}/`, { title, description });\r\n                setPlans(plans.map(plan => (plan.id === editingPlan.id ? { ...plan, title, description } : plan)));\r\n            } else {\r\n                const response = await api.post('/plans/', { title, description });\r\n                setPlans([...plans, response.data]);\r\n            }\r\n            setTitle('');\r\n            setDescription('');\r\n            setEditingPlan(null);\r\n        } catch (error) {\r\n            console.error(`Error ${editingPlan ? 'updating' : 'creating'} plan`, error);\r\n        }\r\n    };\r\n\r\n    const handleEditPlan = (plan) => {\r\n        setTitle(plan.title);\r\n        setDescription(plan.description);\r\n        setEditingPlan(plan);\r\n    };\r\n\r\n    const handleDeletePlan = async (id) => {\r\n        try {\r\n            await api.delete(`/plans/${id}/`);\r\n            setPlans(plans.filter(plan => plan.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting plan', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Manage Plans</h2>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    placeholder=\"Title\"\r\n                />\r\n                <textarea\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    placeholder=\"Description\"\r\n                ></textarea>\r\n                <button onClick={handleCreateOrUpdatePlan}>\r\n                    {editingPlan ? 'Update Plan' : 'Create Plan'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {plans.map(plan => (\r\n                    <li key={plan.id}>\r\n                        <h4>{plan.title}</h4>\r\n                        <p>{plan.description}</p>\r\n                        <button onClick={() => handleEditPlan(plan)}>Edit</button>\r\n                        <button onClick={() => handleDeletePlan(plan.id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlanManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}