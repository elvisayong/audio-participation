name: CI/CD Pipeline for E2E Tests

on:
  pull_request:
    branches:
      - main
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.5'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Print environment information
        run: |
          echo "Python version:"
          python --version
          echo "Node.js version:"
          node --version
          echo "npm version:"
          npm --version

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r audio_participation_backend/audio_participation_backend/requirements.txt

      - name: Set up Django environment
        run: |
          cd audio_participation_backend
          mkdir -p logs
          python manage.py check

      - name: Apply migrations
        env:
          DJANGO_SETTINGS_MODULE: audio_participation_backend.settings
        run: |
          cd audio_participation_backend
          python manage.py migrate

      - name: Verify database state
        run: |
          cd audio_participation_backend
          python manage.py dumpdata > db_state.json
          echo "Database state:"
          cat db_state.json

      - name: Start Django server
        env:
          DJANGO_SETTINGS_MODULE: audio_participation_backend.settings
        run: |
          cd audio_participation_backend
          python manage.py runserver 0.0.0.0:8000 &

      - name: Print backend logs
        run: |
          sleep 10
          cat audio_participation_backend/logs/django.log

      - name: Wait for backend to be ready
        run: |
          sudo apt-get install -y curl
          until curl --output /dev/null --silent --head --fail http://localhost:8000; do
            echo 'Waiting for backend...'
            sleep 10
          done

      - name: Install frontend dependencies
        run: |
          cd audio-participation-frontend
          npm install

      - name: Start frontend server
        env:
          CI: true
          REACT_APP_API_URL: http://localhost:8000
        run: |
          cd audio-participation-frontend
          npm start &

      - name: Print frontend logs
        run: |
          sleep 10
          if [ -d "audio-participation-frontend/logs" ]; then
            cat audio-participation-frontend/logs/*.log
          else
            echo "Frontend logs directory not found"
          fi

      - name: Wait for frontend to be ready
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:3000; do
            echo 'Waiting for frontend...'
            sleep 10
          done

      - name: Check backend server status
        run: |
          curl -I http://localhost:8000

      - name: Check frontend server status
        run: |
          curl -I http://localhost:3000

      - name: Check frontend to backend connectivity
        run: |
          curl http://localhost:3000/api/healthcheck

      - name: Check environment variables
        run: |
          echo "REACT_APP_API_URL: $REACT_APP_API_URL"
          echo "DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE"

      - name: Install Cypress dependencies
        run: |
          cd audio-participation-frontend
          npm install cypress cypress-failed-log

      - name: Run Cypress tests
        env:
          CYPRESS_BASE_URL: http://localhost:3000
        run: |
          cd audio-participation-frontend
          npx cypress run --config defaultCommandTimeout=120000 --reporter cypress-failed-log

      - name: List Cypress videos
        run: ls -R audio-participation-frontend/cypress/videos
        continue-on-error: true

      - name: List Cypress screenshots
        run: ls -R audio-participation-frontend/cypress/screenshots
        continue-on-error: true

      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: audio-participation-frontend/cypress/videos/**/*.mp4
        continue-on-error: true

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: audio-participation-frontend/cypress/screenshots/**/*.png
        continue-on-error: true

      - name: Upload Cypress failed logs
        uses: actions/upload-artifact@v2
        with:
          name: cypress-failed-logs
          path: audio-participation-frontend/cypress-failed-log.txt
        continue-on-error: true