name: CI/CD Pipeline for E2E Tests

on:
  pull_request:
    branches:
      - main
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.5'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r audio_participation_backend/audio_participation_backend/requirements.txt

      - name: Apply migrations
        run: |
          cd audio_participation_backend
          export DJANGO_SETTINGS_MODULE=audio_participation_backend.settings_test
          python manage.py migrate

      - name: Start Django server
        run: |
          cd audio_participation_backend
          export DJANGO_SETTINGS_MODULE=audio_participation_backend.settings_test
          python manage.py runserver 0.0.0.0:8000 &
        env:
          DJANGO_SETTINGS_MODULE: audio_participation_backend.settings_test

      - name: Wait for backend to be ready
        run: |
          sudo apt-get install -y curl
          until curl --output /dev/null --silent --head --fail http://localhost:8000; do
            echo 'Waiting for backend...'
            sleep 10
          done

      - name: Install frontend dependencies
        run: |
          cd audio-participation-frontend
          npm install

      - name: Start frontend server
        run: |
          cd audio-participation-frontend
          npm start &
        env:
          CI: true

      - name: Wait for frontend to be ready
        run: |
          sudo apt-get install -y curl
          until curl --output /dev/null --silent --head --fail http://localhost:3000; do
            echo 'Waiting for frontend...'
            sleep 10
          done

      - name: Check frontend server logs
        run: |
          ps aux | grep npm
          sudo netstat -tuln | grep :3000
          curl -I http://localhost:3000

      - name: Run Cypress tests
        run: |
          cd audio-participation-frontend
          npx cypress run --config defaultCommandTimeout=60000
        continue-on-error: true

  post-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List Cypress videos
        run: ls -R audio-participation-frontend/cypress/videos
        continue-on-error: true

      - name: List Cypress screenshots
        run: ls -R audio-participation-frontend/cypress/screenshots
        continue-on-error: true

      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: audio-participation-frontend/cypress/videos/**/*.mp4
        continue-on-error: true

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: audio-participation-frontend/cypress/screenshots/**/*.png
        continue-on-error: true
